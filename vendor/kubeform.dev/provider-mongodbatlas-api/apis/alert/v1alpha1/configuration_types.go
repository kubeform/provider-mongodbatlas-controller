/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/apimachinery/api/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	kmapi "kmodules.xyz/client-go/api/v1"
	"sigs.k8s.io/cli-utils/pkg/kstatus/status"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type Configuration struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              ConfigurationSpec   `json:"spec,omitempty"`
	Status            ConfigurationStatus `json:"status,omitempty"`
}

type ConfigurationSpecMatcher struct {
	// +optional
	FieldName *string `json:"fieldName,omitempty" tf:"field_name"`
	// +optional
	Operator *string `json:"operator,omitempty" tf:"operator"`
	// +optional
	Value *string `json:"value,omitempty" tf:"value"`
}

type ConfigurationSpecMetricThresholdConfig struct {
	// +optional
	MetricName *string `json:"metricName,omitempty" tf:"metric_name"`
	// +optional
	Mode *string `json:"mode,omitempty" tf:"mode"`
	// +optional
	Operator *string `json:"operator,omitempty" tf:"operator"`
	// +optional
	Threshold *float64 `json:"threshold,omitempty" tf:"threshold"`
	// +optional
	Units *string `json:"units,omitempty" tf:"units"`
}

type ConfigurationSpecNotification struct {
	// +optional
	ApiToken *string `json:"-" sensitive:"true" tf:"api_token"`
	// +optional
	ChannelName *string `json:"channelName,omitempty" tf:"channel_name"`
	// +optional
	DatadogAPIKey *string `json:"-" sensitive:"true" tf:"datadog_api_key"`
	// +optional
	DatadogRegion *string `json:"datadogRegion,omitempty" tf:"datadog_region"`
	// +optional
	DelayMin *int64 `json:"delayMin,omitempty" tf:"delay_min"`
	// +optional
	EmailAddress *string `json:"emailAddress,omitempty" tf:"email_address"`
	// +optional
	EmailEnabled *bool `json:"emailEnabled,omitempty" tf:"email_enabled"`
	// +optional
	FlowName *string `json:"flowName,omitempty" tf:"flow_name"`
	// +optional
	FlowdockAPIToken *string `json:"-" sensitive:"true" tf:"flowdock_api_token"`
	// +optional
	IntervalMin *int64 `json:"intervalMin,omitempty" tf:"interval_min"`
	// +optional
	MobileNumber *string `json:"mobileNumber,omitempty" tf:"mobile_number"`
	// +optional
	OpsGenieAPIKey *string `json:"-" sensitive:"true" tf:"ops_genie_api_key"`
	// +optional
	OpsGenieRegion *string `json:"opsGenieRegion,omitempty" tf:"ops_genie_region"`
	// +optional
	OrgName *string `json:"orgName,omitempty" tf:"org_name"`
	// +optional
	Roles []string `json:"roles,omitempty" tf:"roles"`
	// +optional
	ServiceKey *string `json:"-" sensitive:"true" tf:"service_key"`
	// +optional
	SmsEnabled *bool `json:"smsEnabled,omitempty" tf:"sms_enabled"`
	// +optional
	TeamID *string `json:"teamID,omitempty" tf:"team_id"`
	// +optional
	TeamName *string `json:"teamName,omitempty" tf:"team_name"`
	// +optional
	TypeName *string `json:"typeName,omitempty" tf:"type_name"`
	// +optional
	Username *string `json:"username,omitempty" tf:"username"`
	// +optional
	VictorOpsAPIKey *string `json:"-" sensitive:"true" tf:"victor_ops_api_key"`
	// +optional
	VictorOpsRoutingKey *string `json:"-" sensitive:"true" tf:"victor_ops_routing_key"`
}

type ConfigurationSpecThresholdConfig struct {
	// +optional
	Operator *string `json:"operator,omitempty" tf:"operator"`
	// +optional
	Threshold *float64 `json:"threshold,omitempty" tf:"threshold"`
	// +optional
	Units *string `json:"units,omitempty" tf:"units"`
}

type ConfigurationSpec struct {
	State *ConfigurationSpecResource `json:"state,omitempty" tf:"-"`

	Resource ConfigurationSpecResource `json:"resource" tf:"resource"`

	UpdatePolicy base.UpdatePolicy `json:"updatePolicy,omitempty" tf:"-"`

	TerminationPolicy base.TerminationPolicy `json:"terminationPolicy,omitempty" tf:"-"`

	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-"`

	SecretRef *core.LocalObjectReference `json:"secretRef,omitempty" tf:"-"`

	BackendRef *core.LocalObjectReference `json:"backendRef,omitempty" tf:"-"`
}

type ConfigurationSpecResource struct {
	ID string `json:"id,omitempty" tf:"id,omitempty"`

	// +optional
	AlertConfigurationID *string `json:"alertConfigurationID,omitempty" tf:"alert_configuration_id"`
	// +optional
	Created *string `json:"created,omitempty" tf:"created"`
	// +optional
	Enabled   *bool   `json:"enabled,omitempty" tf:"enabled"`
	EventType *string `json:"eventType" tf:"event_type"`
	// +optional
	Matcher []ConfigurationSpecMatcher `json:"matcher,omitempty" tf:"matcher"`
	// +optional
	// Deprecated
	MetricThreshold *map[string]string `json:"metricThreshold,omitempty" tf:"metric_threshold"`
	// +optional
	MetricThresholdConfig *ConfigurationSpecMetricThresholdConfig `json:"metricThresholdConfig,omitempty" tf:"metric_threshold_config"`
	Notification          []ConfigurationSpecNotification         `json:"notification" tf:"notification"`
	ProjectID             *string                                 `json:"projectID" tf:"project_id"`
	// +optional
	// Deprecated
	Threshold *map[string]string `json:"threshold,omitempty" tf:"threshold"`
	// +optional
	ThresholdConfig *ConfigurationSpecThresholdConfig `json:"thresholdConfig,omitempty" tf:"threshold_config"`
	// +optional
	Updated *string `json:"updated,omitempty" tf:"updated"`
}

type ConfigurationStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
	// +optional
	Phase status.Status `json:"phase,omitempty"`
	// +optional
	Conditions []kmapi.Condition `json:"conditions,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// ConfigurationList is a list of Configurations
type ConfigurationList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	// Items is a list of Configuration CRD objects
	Items []Configuration `json:"items,omitempty"`
}
