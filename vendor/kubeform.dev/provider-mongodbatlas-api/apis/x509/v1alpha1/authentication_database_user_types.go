/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/apimachinery/api/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	kmapi "kmodules.xyz/client-go/api/v1"
	"sigs.k8s.io/cli-utils/pkg/kstatus/status"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type AuthenticationDatabaseUser struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              AuthenticationDatabaseUserSpec   `json:"spec,omitempty"`
	Status            AuthenticationDatabaseUserStatus `json:"status,omitempty"`
}

type AuthenticationDatabaseUserSpecCertificates struct {
	// +optional
	CreatedAt *string `json:"createdAt,omitempty" tf:"created_at"`
	// +optional
	GroupID *string `json:"groupID,omitempty" tf:"group_id"`
	// +optional
	ID *int64 `json:"ID,omitempty" tf:"id"`
	// +optional
	NotAfter *string `json:"notAfter,omitempty" tf:"not_after"`
	// +optional
	Subject *string `json:"subject,omitempty" tf:"subject"`
}

type AuthenticationDatabaseUserSpec struct {
	State *AuthenticationDatabaseUserSpecResource `json:"state,omitempty" tf:"-"`

	Resource AuthenticationDatabaseUserSpecResource `json:"resource" tf:"resource"`

	UpdatePolicy base.UpdatePolicy `json:"updatePolicy,omitempty" tf:"-"`

	TerminationPolicy base.TerminationPolicy `json:"terminationPolicy,omitempty" tf:"-"`

	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-"`

	SecretRef *core.LocalObjectReference `json:"secretRef,omitempty" tf:"-"`

	BackendRef *core.LocalObjectReference `json:"backendRef,omitempty" tf:"-"`
}

type AuthenticationDatabaseUserSpecResource struct {
	ID string `json:"id,omitempty" tf:"id,omitempty"`

	// +optional
	Certificates []AuthenticationDatabaseUserSpecCertificates `json:"certificates,omitempty" tf:"certificates"`
	// +optional
	CurrentCertificate *string `json:"-" sensitive:"true" tf:"current_certificate"`
	// +optional
	CustomerX509Cas *string `json:"-" sensitive:"true" tf:"customer_x509_cas"`
	// +optional
	MonthsUntilExpiration *int64  `json:"monthsUntilExpiration,omitempty" tf:"months_until_expiration"`
	ProjectID             *string `json:"projectID" tf:"project_id"`
	// +optional
	Username *string `json:"username,omitempty" tf:"username"`
}

type AuthenticationDatabaseUserStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
	// +optional
	Phase status.Status `json:"phase,omitempty"`
	// +optional
	Conditions []kmapi.Condition `json:"conditions,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// AuthenticationDatabaseUserList is a list of AuthenticationDatabaseUsers
type AuthenticationDatabaseUserList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	// Items is a list of AuthenticationDatabaseUser CRD objects
	Items []AuthenticationDatabaseUser `json:"items,omitempty"`
}
